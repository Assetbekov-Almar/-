{"version":3,"sources":["assets/images/Bibliophile.gif","infrastructure/utils/authValidation.js","pages/Auth/UI/SignInForm.js","pages/Auth/UI/SignUpForm.js","pages/Auth/Auth.js","pages/Auth/index.js"],"names":["emailRegex","RegExp","loginValidator","value","trim","emailValidator","split","length","test","passwordValidator","SignInForm","props","form","isEmailModified","setIsEmailModified","isPasswordModified","setIsPasswordModified","setIsSignIn","handleChange","navigate","useNavigate","useState","isEmptyError","setIsEmptyError","className","onSubmit","e","preventDefault","email","password","LocalStorageService","setItem","EMAIL","PASSWORD","htmlFor","id","type","placeholder","onChange","target","onClick","SignUpForm","isNameModified","setIsNameModified","isLastNameModified","setIsLastNameModified","Object","values","some","x","FIRST_NAME","firstName","LAST_NAME","lastName","Auth","setForm","isSignIn","field","setFieldModified","prevState","src","img","alt"],"mappings":"8IAAe,MAA0B,wCCAnCA,EAAa,IAAIC,OAAO,gBAIjBC,GAHU,IAAID,OAAO,6CACf,IAAIA,OAAO,eAEA,SAAAE,GAAK,OAAKA,GAA0B,KAAjBA,EAAMC,OAA6C,GAA7B,8BAE1DC,EAAiB,SAAAF,GAAK,OAAMA,GAA0B,KAAjBA,EAAMC,OAAmF,IAArCD,EAAMC,OAAOE,MAAM,OAAOC,QAAgBP,EAAWQ,KAAKL,GAAU,GAAK,iBAAvG,6BAI3DM,EAAoB,SAAAN,GAAK,OAAKA,EAAuD,KAAjBA,EAAMC,OAAgB,kCAAoCD,EAAQA,EAAMI,QAAU,EAAI,GAAK,+CAAiD,GAA1K,6B,8BC4EpCG,EAhFI,SAACC,GAClB,IAAQC,EAAoHD,EAApHC,KAAMC,EAA8GF,EAA9GE,gBAAiBC,EAA6FH,EAA7FG,mBAAoBC,EAAyEJ,EAAzEI,mBAAoBC,EAAqDL,EAArDK,sBAAuBC,EAA8BN,EAA9BM,YAAaC,EAAiBP,EAAjBO,aAErGC,EAAWC,cACjB,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAiBA,OACE,uBAAMC,UAAU,wEAAwEC,SAhBrE,SAACC,GACpBA,EAAEC,iBACef,EAAKgB,OAAUhB,EAAKiB,UAKrCN,GAAgB,GAEhBO,IAAoBC,QAAQC,IAAOpB,EAAKgB,OACxCE,IAAoBC,QAAQE,IAAUrB,EAAKiB,UAE3CV,EAAS,aARPI,GAAgB,IAYlB,UACE,sBAAKC,UAAU,+BAAf,UACE,qBAAKA,UAAU,WAAf,SACE,uBAAOA,UAAU,gEACVU,QAAQ,QADf,qBAKF,sBAAKV,UAAU,WAAf,UACE,uBACEA,UAAS,+CAA2CX,GAAmBR,EAAeO,EAAKgB,OAAU,sCAAuC,0CAAnI,mHAETO,GAAG,QAAQC,KAAK,QAAQC,YAAY,cAAclC,MAAOS,EAAKgB,MAC9DU,SAAU,SAAAZ,GAAC,OAAIR,EAAaQ,EAAEa,OAAOpC,MAAO,QAASW,MACtDD,GAAmB,mBAAGW,UAAU,8BAAb,SAA4CnB,EAAeO,EAAKgB,eAIxF,sBAAKJ,UAAU,+BAAf,UACE,qBAAKA,UAAU,WAAf,SACE,uBAAOA,UAAU,gEACVU,QAAQ,kBADf,wBAKF,sBAAKV,UAAU,WAAf,UACE,uBACEA,UAAS,+CAA2CT,GAAsBN,EAAkBG,EAAKiB,UAAa,sCAAuC,0CAA5I,mHAETM,GAAG,kBAAkBC,KAAK,WAAYC,YAAY,cAAclC,MAAOS,EAAKiB,SAC5ES,SAAU,SAAAZ,GAAC,OAAIR,EAAaQ,EAAEa,OAAOpC,MAAO,WAAYa,MACzDD,GAAsB,mBAAGS,UAAU,8BAAb,SAA4Cf,EAAkBG,EAAKiB,kBAI9F,sBAAKL,UAAU,qCAAf,UACGF,GAAgB,mBAAGE,UAAU,eAAb,yCACjB,qBAAKA,UAAU,OAAf,SACE,wBACEA,UAAU,0HACVY,KAAK,SAFP,0BAQJ,oBAAIZ,UAAU,YAAd,SACE,+CAAkB,IAChB,sBAAMA,UAAU,mDACbgB,QAAS,kBAAMvB,GAAY,IAD9B,8BCkDKwB,EAvHI,SAAC9B,GAClB,IAAQC,EAEqDD,EAFrDC,KAAM8B,EAE+C/B,EAF/C+B,eAAgBC,EAE+BhC,EAF/BgC,kBAAmBC,EAEYjC,EAFZiC,mBACzCC,EACqDlC,EADrDkC,sBAAuBhC,EAC8BF,EAD9BE,gBAAiBC,EACaH,EADbG,mBAAoBC,EACPJ,EADOI,mBAC5DC,EAAqDL,EAArDK,sBAAuBC,EAA8BN,EAA9BM,YAAaC,EAAiBP,EAAjBO,aAEtCC,EAAWC,cACjB,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAmBA,OACE,uBAAMC,UAAU,wEAAwEC,SAlBrE,SAACC,GACpBA,EAAEC,iBACcmB,OAAOC,OAAOnC,GAAMoC,MAAK,SAAAC,GAAC,MAAU,KAANA,KAE5C1B,GAAgB,IAGlBA,GAAgB,GAEhBO,IAAoBC,QAAQmB,IAAYtC,EAAKuC,WAC7CrB,IAAoBC,QAAQqB,IAAWxC,EAAKyC,UAC5CvB,IAAoBC,QAAQC,IAAOpB,EAAKgB,OACxCE,IAAoBC,QAAQE,IAAUrB,EAAKiB,UAE3CV,EAAS,cAIT,UAEE,sBAAKK,UAAU,+BAAf,UACE,qBAAKA,UAAU,WAAf,SACE,uBAAOA,UAAU,gEACVU,QAAQ,oBADf,0BAKF,sBAAKV,UAAU,WAAf,UACE,uBACEA,UAAS,+CAA2CkB,GAAkBxC,EAAeU,EAAKuC,WAAc,sCAAuC,0CAAtI,mHAEThB,GAAG,oBAAoBC,KAAK,OAAOC,YAAY,cAAclC,MAAOS,EAAKuC,UACzEb,SAAU,SAAAZ,GAAC,OAAIR,EAAaQ,EAAEa,OAAOpC,MAAO,YAAawC,MAC1DD,GAAkB,mBAAGlB,UAAU,8BAAb,SAA4CtB,EAAeU,EAAKuC,mBAIvF,sBAAK3B,UAAU,+BAAf,UACE,qBAAKA,UAAU,WAAf,SACE,uBAAOA,UAAU,gEACVU,QAAQ,mBADf,yBAKF,sBAAKV,UAAU,WAAf,UACE,uBACEA,UAAS,+CAA2CoB,GAAsB1C,EAAeU,EAAKyC,UAAa,sCAAuC,0CAAzI,mHAETlB,GAAG,mBAAmBC,KAAK,OAAOC,YAAY,cAAclC,MAAOS,EAAKyC,SACxEf,SAAU,SAAAZ,GAAC,OAAIR,EAAaQ,EAAEa,OAAOpC,MAAO,WAAY0C,MACzDD,GAAsB,mBAAGpB,UAAU,8BAAb,SAA4CtB,EAAeU,EAAKyC,kBAI3F,sBAAK7B,UAAU,+BAAf,UACE,qBAAKA,UAAU,WAAf,SACE,uBAAOA,UAAU,gEACVU,QAAQ,QADf,qBAKF,sBAAKV,UAAU,WAAf,UACE,uBACEA,UAAS,+CAA2CX,GAAmBR,EAAeO,EAAKgB,OAAU,sCAAuC,0CAAnI,mHAETO,GAAG,QAAQC,KAAK,QAAQC,YAAY,cAAclC,MAAOS,EAAKgB,MAC9DU,SAAU,SAAAZ,GAAC,OAAIR,EAAaQ,EAAEa,OAAOpC,MAAO,QAASW,MACtDD,GAAmB,mBAAGW,UAAU,8BAAb,SAA4CnB,EAAeO,EAAKgB,eAIxF,sBAAKJ,UAAU,+BAAf,UACE,qBAAKA,UAAU,WAAf,SACE,uBAAOA,UAAU,gEACVU,QAAQ,kBADf,wBAKF,sBAAKV,UAAU,WAAf,UACE,uBACEA,UAAS,+CAA2CT,GAAsBN,EAAkBG,EAAKiB,UAAa,sCAAuC,0CAA5I,mHAETM,GAAG,kBAAkBC,KAAK,WAAYC,YAAY,cAAclC,MAAOS,EAAKiB,SAC5ES,SAAU,SAAAZ,GAAC,OAAIR,EAAaQ,EAAEa,OAAOpC,MAAO,WAAYa,MACzDD,GAAsB,mBAAGS,UAAU,8BAAb,SAA4Cf,EAAkBG,EAAKiB,kBAI9F,sBAAKL,UAAU,qCAAf,UACGF,GAAgB,mBAAGE,UAAU,eAAb,yCACjB,qBAAKA,UAAU,OAAf,SACE,wBACEA,UAAU,0HACVY,KAAK,SAFP,0BAQJ,oBAAIZ,UAAU,YAAd,SACE,mDAAsB,IACpB,sBAAMA,UAAU,mDACbgB,QAAS,kBAAMvB,GAAY,IAD9B,8BCzEKqC,EAtCF,WACX,MAAwBjC,mBAAS,CAC/B8B,UAAW,GACXE,SAAU,GACVzB,MAAO,GACPC,SAAU,KAJZ,mBAAOjB,EAAP,KAAa2C,EAAb,KAOC,EAA4ClC,oBAAS,GAArD,mBAAOqB,EAAP,KAAuBC,EAAvB,KACD,EAAoDtB,oBAAS,GAA7D,mBAAOuB,EAAP,KAA2BC,EAA3B,KACA,EAA8CxB,oBAAS,GAAvD,mBAAOR,EAAP,KAAwBC,EAAxB,KACA,EAAoDO,oBAAS,GAA7D,mBAAON,EAAP,KAA2BC,EAA3B,KAEA,EAAgCK,oBAAS,GAAzC,mBAAOmC,EAAP,KAAiBvC,EAAjB,KAEMC,EAAe,SAACf,EAAOsD,EAAOC,GAClCA,GAAiB,GACjBH,GAAQ,SAAAI,GAAS,kCAASA,GAAT,kBAAqBF,EAAQtD,QAGhD,OACE,sBAAKqB,UAAU,gBAAf,UACGgC,EACG,cAAC,EAAD,CACQ5C,OAAMC,kBAAiBC,qBAAoBC,qBAC3CC,wBAAuBC,cAAaC,iBAG5C,cAAC,EAAD,CACQN,OAAM8B,iBAAgBC,oBAAmBC,qBACzCC,wBAAuBhC,kBAAiBC,qBAAoBC,qBAC5DC,wBAAuBC,cAAaC,iBAEhD,qBAAK0C,IAAKC,EAAKC,IAAI,cCpCVR","file":"static/js/7.4faf05b9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Bibliophile.310bcd0d.gif\";","const emailRegex = new RegExp(/\\S+@\\S+\\.\\S+/);\r\nconst phoneMaskRegex = new RegExp(/^\\+7 \\((\\d{3})\\) (\\d{3})-(\\d{2})-(\\d{2})$/);\r\nconst phoneRegex = new RegExp(/^7(\\d{10})$/);\r\n\r\nexport const loginValidator = value => !value || value.trim() === '' ? 'The field cannot be empty': '';\r\n\r\nexport const emailValidator = value =>  !value || value.trim() === '' ? 'The field cannot be empty': (value.trim().split(/\\s+/).length === 1 && emailRegex.test(value)) ? '' : 'Invalid email.';\r\n\r\nexport const phoneValidator = value => (!value || value.trim() === '' || value === '+_ (___) ___-__-__') || (phoneMaskRegex.test(value) || phoneRegex.test(value)) ? '' : 'Невалидный номер телефона.';\r\n\r\nexport const passwordValidator = value => !value ? 'The field cannot be empty' : value.trim() === '' ? 'Password cannot contains spaces' : value ? value.length >= 6 ? '' : 'Password must be at least 6 characters long.' : '';\r\n","import {emailValidator, passwordValidator} from \"../../../infrastructure/utils/authValidation\";\r\nimport React, {useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport LocalStorageService from \"../../../infrastructure/service/storage/LocalStorageService\";\r\nimport {EMAIL, PASSWORD} from \"../../../infrastructure/service/storage/config\";\r\n\r\nconst SignInForm = (props) => {\r\n  const { form, isEmailModified, setIsEmailModified, isPasswordModified, setIsPasswordModified, setIsSignIn, handleChange } = props\r\n\r\n  const navigate = useNavigate()\r\n  const [isEmptyError, setIsEmptyError] = useState(false)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const isEmpty = !form.email || !form.password\r\n    if (isEmpty) {\r\n      setIsEmptyError(true)\r\n      return\r\n    }\r\n    setIsEmptyError(false)\r\n\r\n    LocalStorageService.setItem(EMAIL, form.email)\r\n    LocalStorageService.setItem(PASSWORD, form.password)\r\n\r\n    navigate('/library')\r\n  }\r\n\r\n  return (\r\n    <form className=\"w-full max-w-md flex flex-col justify-center items-center bg-gray-100\" onSubmit={handleSubmit}>\r\n      <div className=\"md:flex md:items-center mb-6\">\r\n        <div className=\"md:w-1/3\">\r\n          <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\"\r\n                 htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n        </div>\r\n        <div className=\"md:w-2/3\">\r\n          <input\r\n            className={`bg-gray-200 appearance-none border-2 ${(isEmailModified && emailValidator(form.email)) ? 'border-red-300 focus:border-red-500': 'border-gray-200 focus:border-purple-500'}\r\n                       rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white`}\r\n            id=\"email\" type=\"email\" placeholder=\"Enter value\" value={form.email}\r\n            onChange={e => handleChange(e.target.value, 'email', setIsEmailModified)} />\r\n          {isEmailModified && <p className=\"text-red-500 text-xs italic\">{emailValidator(form.email)}</p>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"md:flex md:items-center mb-6\">\r\n        <div className=\"md:w-1/3\">\r\n          <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\"\r\n                 htmlFor=\"inline-password\">\r\n            Password\r\n          </label>\r\n        </div>\r\n        <div className=\"md:w-2/3\">\r\n          <input\r\n            className={`bg-gray-200 appearance-none border-2 ${(isPasswordModified && passwordValidator(form.password)) ? 'border-red-300 focus:border-red-500': 'border-gray-200 focus:border-purple-500'}\r\n                       rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white`}\r\n            id=\"inline-password\" type=\"password\"  placeholder=\"Enter value\" value={form.password}\r\n            onChange={e => handleChange(e.target.value, 'password', setIsPasswordModified)} />\r\n          {isPasswordModified && <p className=\"text-red-500 text-xs italic\">{passwordValidator(form.password)}</p>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex items-center flex-col gap-y-3\">\r\n        {isEmptyError && <p className=\"text-red-500\">Please fill all the fields.</p>}\r\n        <div className=\"mb-8\">\r\n          <button\r\n            className=\"shadow bg-purple-500 hover:bg-purple-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\r\n            type=\"submit\">\r\n            Sign In\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <ul className=\"list-none\">\r\n        <li>Not a member?{' '}\r\n          <span className=\"text-blue-500 hover:text-blue-800 cursor-pointer\"\r\n             onClick={() => setIsSignIn(false)}>\r\n            Sign Up\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SignInForm","import {emailValidator, loginValidator, passwordValidator} from \"../../../infrastructure/utils/authValidation\";\r\nimport React, {useState} from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport LocalStorageService from \"../../../infrastructure/service/storage/LocalStorageService\";\r\nimport {EMAIL, FIRST_NAME, LAST_NAME, PASSWORD} from \"../../../infrastructure/service/storage/config\";\r\n\r\n\r\nconst SignUpForm = (props) => {\r\n  const { form, isNameModified, setIsNameModified, isLastNameModified,\r\n          setIsLastNameModified, isEmailModified, setIsEmailModified, isPasswordModified,\r\n          setIsPasswordModified, setIsSignIn, handleChange } = props\r\n\r\n  const navigate = useNavigate()\r\n  const [isEmptyError, setIsEmptyError] = useState(false)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const isEmpty = Object.values(form).some(x => x === '');\r\n    if (isEmpty) {\r\n      setIsEmptyError(true)\r\n      return\r\n    }\r\n    setIsEmptyError(false)\r\n\r\n    LocalStorageService.setItem(FIRST_NAME, form.firstName)\r\n    LocalStorageService.setItem(LAST_NAME, form.lastName)\r\n    LocalStorageService.setItem(EMAIL, form.email)\r\n    LocalStorageService.setItem(PASSWORD, form.password)\r\n\r\n    navigate('/library')\r\n  }\r\n\r\n  return (\r\n    <form className=\"w-full max-w-md flex flex-col justify-center items-center bg-gray-100\" onSubmit={handleSubmit}>\r\n\r\n      <div className=\"md:flex md:items-center mb-6\">\r\n        <div className=\"md:w-1/3\">\r\n          <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\"\r\n                 htmlFor=\"inline-first-name\">\r\n            First Name\r\n          </label>\r\n        </div>\r\n        <div className=\"md:w-2/3\">\r\n          <input\r\n            className={`bg-gray-200 appearance-none border-2 ${(isNameModified && loginValidator(form.firstName)) ? 'border-red-300 focus:border-red-500': 'border-gray-200 focus:border-purple-500'}\r\n                       rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white`}\r\n            id=\"inline-first-name\" type=\"text\" placeholder=\"Enter value\" value={form.firstName}\r\n            onChange={e => handleChange(e.target.value, 'firstName', setIsNameModified)} />\r\n          {isNameModified && <p className=\"text-red-500 text-xs italic\">{loginValidator(form.firstName)}</p>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"md:flex md:items-center mb-6\">\r\n        <div className=\"md:w-1/3\">\r\n          <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\"\r\n                 htmlFor=\"inline-last-name\">\r\n            Last Name\r\n          </label>\r\n        </div>\r\n        <div className=\"md:w-2/3\">\r\n          <input\r\n            className={`bg-gray-200 appearance-none border-2 ${(isLastNameModified && loginValidator(form.lastName)) ? 'border-red-300 focus:border-red-500': 'border-gray-200 focus:border-purple-500'}\r\n                       rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white`}\r\n            id=\"inline-last-name\" type=\"text\" placeholder=\"Enter value\" value={form.lastName}\r\n            onChange={e => handleChange(e.target.value, 'lastName', setIsLastNameModified)} />\r\n          {isLastNameModified && <p className=\"text-red-500 text-xs italic\">{loginValidator(form.lastName)}</p>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"md:flex md:items-center mb-6\">\r\n        <div className=\"md:w-1/3\">\r\n          <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\"\r\n                 htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n        </div>\r\n        <div className=\"md:w-2/3\">\r\n          <input\r\n            className={`bg-gray-200 appearance-none border-2 ${(isEmailModified && emailValidator(form.email)) ? 'border-red-300 focus:border-red-500': 'border-gray-200 focus:border-purple-500'}\r\n                       rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white`}\r\n            id=\"email\" type=\"email\" placeholder=\"Enter value\" value={form.email}\r\n            onChange={e => handleChange(e.target.value, 'email', setIsEmailModified)} />\r\n          {isEmailModified && <p className=\"text-red-500 text-xs italic\">{emailValidator(form.email)}</p>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"md:flex md:items-center mb-6\">\r\n        <div className=\"md:w-1/3\">\r\n          <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\"\r\n                 htmlFor=\"inline-password\">\r\n            Password\r\n          </label>\r\n        </div>\r\n        <div className=\"md:w-2/3\">\r\n          <input\r\n            className={`bg-gray-200 appearance-none border-2 ${(isPasswordModified && passwordValidator(form.password)) ? 'border-red-300 focus:border-red-500': 'border-gray-200 focus:border-purple-500'}\r\n                       rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white`}\r\n            id=\"inline-password\" type=\"password\"  placeholder=\"Enter value\" value={form.password}\r\n            onChange={e => handleChange(e.target.value, 'password', setIsPasswordModified)} />\r\n          {isPasswordModified && <p className=\"text-red-500 text-xs italic\">{passwordValidator(form.password)}</p>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex items-center flex-col gap-y-3\">\r\n        {isEmptyError && <p className=\"text-red-500\">Please fill all the fields.</p>}\r\n        <div className=\"mb-8\">\r\n          <button\r\n            className=\"shadow bg-purple-500 hover:bg-purple-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\r\n            type=\"submit\">\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <ul className=\"list-none\">\r\n        <li>Already a member?{' '}\r\n          <span className=\"text-blue-500 hover:text-blue-800 cursor-pointer\"\r\n             onClick={() => setIsSignIn(true)}>\r\n            Sign In\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SignUpForm","import React, {useState} from 'react'\r\nimport img from '../../assets/images/Bibliophile.gif'\r\nimport SignInForm from \"./UI/SignInForm\";\r\nimport SignUpForm from \"./UI/SignUpForm\";\r\n\r\nconst Auth = () => {\r\n  const [form, setForm] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\n   const [isNameModified, setIsNameModified] = useState(false)\r\n  const [isLastNameModified, setIsLastNameModified] = useState(false)\r\n  const [isEmailModified, setIsEmailModified] = useState(false)\r\n  const [isPasswordModified, setIsPasswordModified] = useState(false)\r\n\r\n  const [isSignIn, setIsSignIn] = useState(false)\r\n\r\n  const handleChange = (value, field, setFieldModified) => {\r\n    setFieldModified(true)\r\n    setForm(prevState => ({...prevState, [field]: value}))\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      {isSignIn\r\n        ? <SignInForm\r\n            {...{ form, isEmailModified, setIsEmailModified, isPasswordModified,\r\n                  setIsPasswordModified, setIsSignIn, handleChange }}\r\n        />\r\n\r\n        : <SignUpForm\r\n            {...{ form, isNameModified, setIsNameModified, isLastNameModified,\r\n                  setIsLastNameModified, isEmailModified, setIsEmailModified, isPasswordModified,\r\n                  setIsPasswordModified, setIsSignIn, handleChange }}\r\n        />}\r\n      <img src={img} alt=\"books\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth","import Auth from './Auth'\r\n\r\nexport default Auth"],"sourceRoot":""}