{"version":3,"sources":["infrastructure/redux/actions/bookshelf/actionTypes.js","infrastructure/redux/actions/bookshelf/actions.js","infrastructure/redux/reducers/libraryReducer.js","infrastructure/redux/reducers/bookshelfReducer.js","infrastructure/redux/reducers/getBooksReducer.js","infrastructure/redux/actions/appInit/actionTypes.js","infrastructure/redux/reducers/appInit.js","infrastructure/redux/actions/appType/actionTypes.js","infrastructure/redux/reducers/appType.js","infrastructure/redux/reducers/rootReducer.js","infrastructure/service/api/booksSearch/config.js","infrastructure/service/api/booksSearch/BooksSearchService.js","infrastructure/utils/handleResponse.js","infrastructure/redux/saga/workers/getBooksWorker.js","infrastructure/redux/saga/watchers/getBooksWatcher.js","infrastructure/redux/actions/appType/actions.js","infrastructure/redux/saga/workers/appInitWorkers/appTypeWorker.js","infrastructure/utils/isMobile.js","infrastructure/redux/actions/appInit/actions.js","infrastructure/redux/saga/workers/appInitWorkers/appInitWorker.js","infrastructure/redux/saga/rootSaga.js","infrastructure/redux/store.js","serviceWorkerRegistration.js","common/components/InitLoader/index.js","common/components/InitLoader/InitLoader.js","common/components/AppSelector/AppSelector.js","common/components/AppSelector/index.js","common/components/App/App.js","common/components/App/index.js","index.js","infrastructure/redux/actions/library/actionTypes.js","infrastructure/redux/actions/library/actions.js"],"names":["SET_REVIEW","REMOVE_REVIEW","setReview","payload","type","removeReview","initState","books","reviews","loading","error","APP_INIT_START","APP_INIT_FINISH","APP_INIT_ERROR","initialState","isInit","appInit","state","action","SET_MOBILE_TYPE","SET_DESKTOP_TYPE","isMobile","isDesktop","appType","combineReducers","libraryReducer","ADD_BOOK","REMOVE_BOOK","filter","book","id","bookshelfReducer","rating","review","currentReviews","some","reviewIndex","findIndex","Object","assign","index","payloadid","splice","getBooksReducer","GET_BOOKS_REQUEST","GET_BOOKS_SUCCESS","GET_BOOKS_FAILURE","BOOKS_SEARCH_URL","query","fetch","method","headers","then","response","contentType","get","indexOf","json","data","status","handleResponse","getBooksWorker","call","BooksSearchService","search","put","getBooksSuccess","items","getBooksFailure","console","log","getBooksWatcher","takeLatest","appTypeWorker","test","navigator","userAgent","appInitWorker","rootSaga","take","all","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","middlewares","push","store","createStore","rootReducer","applyMiddleware","run","Boolean","window","location","hostname","match","InitLoader","className","AppDesktop","lazy","AppMobile","AppSelector","connect","fallback","mapDispatchToProps","appInitStart","App","useState","isReady","setIsReady","useEffect","setTimeout","app","ReactDOM","render","document","getElementById","getBooksRequest","addBook","removeBook"],"mappings":"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","file":"static/js/main.a870e2f1.chunk.js","sourcesContent":["export const SET_REVIEW = 'SET_REVIEW'\nexport const REMOVE_REVIEW = 'SET_REVIEW'","import {SET_REVIEW, REMOVE_REVIEW} from \"./actionTypes\";\n\nexport const setReview = (payload) => {\n\treturn {\n\t\ttype: SET_REVIEW,\n\t\tpayload\n\t}\n}\n\nexport const removeReview = (payload) => {\n\treturn {\n\t\ttype: REMOVE_REVIEW,\n\t\tpayload\n\t}\n}","import {ADD_BOOK, REMOVE_BOOK} from \"../actions/library\"\n\nconst initState = {\n  books: []\n};\n\nexport default function libraryReducer(state = initState, action) {\n  switch (action.type) {\n    case ADD_BOOK:\n      return {\n        books: [...state.books, action.payload]\n      }\n\n    case REMOVE_BOOK:\n      return {\n        books: state.books.filter(book => book.id !== action.payload.id)\n      }\n\n    default:\n      return state;\n  }\n}","import {SET_REVIEW, REMOVE_REVIEW} from \"../actions/bookshelf\";\n\nconst initState = {\n\treviews: []\n};\n\nexport default function bookshelfReducer(state = initState, action) {\n\tswitch (action.type) {\n\t\tcase SET_REVIEW:\n\t\t\tconst { id, rating, review} = action.payload\n\t\t\tconst currentReviews = state.reviews\n\n\t\t\tif (currentReviews.some(review => review.id === id)) {\n\t\t\t\tconst reviewIndex = currentReviews.findIndex(review => review.id === id)\n\t\t\t\tif (currentReviews[reviewIndex].rating !== rating ||\n\t\t\t\t\t\tcurrentReviews[reviewIndex].review !== review) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treviews: Object.assign([...currentReviews],  {[reviewIndex]: { id, rating, review }})\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treviews: [...currentReviews]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\treviews: [...currentReviews, {id, rating, review}]\n\t\t\t\t}\n\t\t\t}\n\n\t\tcase REMOVE_REVIEW: {\n\t\t\tconst index = state.reviews.findIndex(review => review.id === action.payloadid)\n\t\t\treturn {\n\t\t\t\treviews: [...state.reviews.splice(index, 1), ...state.reviews]\n\t\t\t}\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import {GET_BOOKS_REQUEST, GET_BOOKS_SUCCESS, GET_BOOKS_FAILURE} from \"../actions/library\"\n\nconst initState = {\n\tbooks: [],\n\tloading: false,\n\terror: null,\n};\n\nexport default function getBooksReducer(state = initState, action) {\n\tswitch (action.type) {\n\t\tcase GET_BOOKS_REQUEST:\n\t\t\treturn {\n\t\t\t\tbooks: [],\n\t\t\t\tloading: true,\n\t\t\t\terror: null,\n\t\t\t}\n\n\t\tcase GET_BOOKS_SUCCESS:\n\t\t\treturn {\n\t\t\t\tbooks: action.payload,\n\t\t\t\tloading: false,\n\t\t\t\terror: null,\n\t\t\t}\n\n\t\tcase GET_BOOKS_FAILURE:\n\t\t\treturn {\n\t\t\t\tbooks: [],\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","export const APP_INIT_START = 'APP_INIT_START'\nexport const APP_INIT_FINISH = 'APP_INIT_FINISH'\nexport const APP_INIT_ERROR = 'APP_INIT_ERROR'\n","import { APP_INIT_ERROR, APP_INIT_FINISH, APP_INIT_START } from '../actions/appInit/actionTypes'\n\nconst initialState = {\n\tisInit: false,\n\terror: null,\n}\n\nconst appInit = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase APP_INIT_START:\n\t\t\treturn {\n\t\t\t\tisInit: false,\n\t\t\t\terror: null,\n\t\t\t}\n\t\tcase APP_INIT_FINISH:\n\t\t\treturn {\n\t\t\t\tisInit: true,\n\t\t\t\terror: null,\n\t\t\t}\n\t\tcase APP_INIT_ERROR:\n\t\t\treturn {\n\t\t\t\tisInit: true,\n\t\t\t\terror: true,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default appInit\n","export const SET_MOBILE_TYPE = 'SET_MOBILE_TYPE'\nexport const SET_DESKTOP_TYPE = 'SET_DESKTOP_TYPE'\n","import { SET_DESKTOP_TYPE, SET_MOBILE_TYPE } from '../actions/appType/actionTypes'\n\nconst initialState = {\n\tisMobile: false,\n\tisDesktop: false,\n}\n\nconst appType = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_MOBILE_TYPE:\n\t\t\treturn {\n\t\t\t\tisMobile: true,\n\t\t\t\tisDesktop: false,\n\t\t\t}\n\t\tcase SET_DESKTOP_TYPE:\n\t\t\treturn {\n\t\t\t\tisMobile: false,\n\t\t\t\tisDesktop: true,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default appType\n","import { combineReducers } from 'redux'\nimport libraryReducer from \"./libraryReducer\";\nimport bookshelfReducer from \"./bookshelfReducer\";\nimport getBooksReducer from \"./getBooksReducer\";\nimport appInit from \"./appInit\";\nimport appType from \"./appType\";\n\nexport default combineReducers({\n  appInit,\n  appType,\n  libraryReducer,\n  bookshelfReducer,\n  getBooksReducer\n})","const BASE_URL = 'https://www.googleapis.com/books'\nconst version = 'v1'\n\nexport const BOOKS_SEARCH_URL = `${BASE_URL}/${version}/volumes`\n","import { BOOKS_SEARCH_URL } from './config'\nimport { handleResponse } from '../../../utils/handleResponse'\n\nclass BooksSearchService {\n\tsearch(query) {\n\t\treturn fetch(`${BOOKS_SEARCH_URL}?q=${query}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {'Content-Type': 'application/json;charset=utf-8'}\n\t\t}).then((response) => handleResponse(response))\n\t}\n}\n\nexport default new BooksSearchService()\n\n","export const handleResponse = (response) => {\n\tconst contentType = response.headers.get('content-type')\n\tif (contentType && contentType.indexOf('application/json') !== -1) {\n\t\treturn response.json().then((data) => {\n\t\t\treturn {\n\t\t\t\tstatus: response.status,\n\t\t\t\tpayload: data,\n\t\t\t}\n\t\t})\n\t} else {\n\t\treturn {\n\t\t\tstatus: response.status,\n\t\t\tpayload: {\n\t\t\t\terror: 'Unexpected error',\n\t\t\t},\n\t\t}\n\t}\n}\n","import { call, put } from 'redux-saga/effects'\nimport { getBooksSuccess, getBooksFailure } from \"../../actions/library\"\nimport BooksSearchService from \"../../../service/api/booksSearch/BooksSearchService\"\n\nexport function* getBooksWorker(action) {\n\t\ttry {\n\t\t\tconst { status, payload } = yield call(BooksSearchService.search, action.payload)\n\n\t\t\tif (status === 200) {\n\t\t\t\tyield put(getBooksSuccess(payload?.items))\n\t\t\t\treturn { status, payload }\n\t\t\t} else {\n\t\t\t\tyield put(getBooksFailure(payload))\n\t\t\t\treturn { status, payload }\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log('getBooksWorker', e)\n\t\t\tyield put(getBooksFailure(e))\n\t\t}\n\n}\n","import { takeLatest } from 'redux-saga/effects'\nimport { getBooksWorker } from '../workers/getBooksWorker'\nimport {GET_BOOKS_REQUEST} from \"../../actions/library\";\n\nconst getBooksWatcher = [takeLatest(GET_BOOKS_REQUEST, getBooksWorker)]\n\nexport default getBooksWatcher\n","import { SET_DESKTOP_TYPE, SET_MOBILE_TYPE } from './actionTypes'\n\nexport const setMobileType = () => {\n\treturn {\n\t\ttype: SET_MOBILE_TYPE,\n\t}\n}\n\nexport const setDesktopType = () => {\n\treturn {\n\t\ttype: SET_DESKTOP_TYPE,\n\t}\n}\n","import { put } from 'redux-saga/effects'\nimport isMobile from '../../../../utils/isMobile'\nimport { setDesktopType, setMobileType } from '../../../actions/appType/actions'\n\nexport default function* appTypeWorker() {\n\tif (isMobile()) {\n\t\tyield put(setMobileType())\n\t} else {\n\t\tyield put(setDesktopType())\n\t}\n}\n","export default function isMobile() {\n\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\n}\n","import { APP_INIT_ERROR, APP_INIT_FINISH, APP_INIT_START } from './actionTypes'\n\nexport const appInitStart = () => {\n\treturn {\n\t\ttype: APP_INIT_START,\n\t}\n}\n\nexport const appInitFinish = () => {\n\treturn {\n\t\ttype: APP_INIT_FINISH,\n\t}\n}\n\nexport const appInitError = () => {\n\treturn {\n\t\ttype: APP_INIT_ERROR,\n\t}\n}\n","import { put, call } from 'redux-saga/effects'\nimport appTypeWorker from './appTypeWorker'\nimport { appInitFinish, appInitError } from '../../../actions/appInit/actions'\n\nexport default function* appInitWorker() {\n\ttry {\n\t\tyield call(appTypeWorker)\n\t\tyield put(appInitFinish())\n\t} catch (error) {\n\t\tconsole.log(error)\n\t\tyield put(appInitError())\n\t}\n}\n","import { all, takeLatest, take } from 'redux-saga/effects'\nimport getBooksWatcher from './watchers/getBooksWatcher'\nimport {APP_INIT_FINISH, APP_INIT_START} from \"../actions/appInit/actionTypes\";\nimport appInitWorker from \"./workers/appInitWorkers/appInitWorker\";\n\nexport default function* rootSaga() {\n\tyield takeLatest(APP_INIT_START, appInitWorker)\n\tyield take(APP_INIT_FINISH)\n\n\tyield all([\n\t\t...getBooksWatcher,\n\n\t])\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers/rootReducer'\nimport rootSaga from './saga/rootSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\nexport const reactType = process.env.NODE_ENV\n\nlet composeEnhancers = compose\n\nif (reactType === 'development') {\n\tcomposeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n}\n\nconst middlewares = []\nmiddlewares.push(sagaMiddleware)\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)))\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","\n\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import InitLoader from './InitLoader'\n\nexport default InitLoader\n","import React from 'react'\nimport './InitLoader.css'\n\nexport default function InitLoader() {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"loader book\">\n\t\t\t\t<figure className=\"page\"></figure>\n\t\t\t\t<figure className=\"page\"></figure>\n\t\t\t\t<figure className=\"page\"></figure>\n\t\t\t</div>\n\n\t\t\t<h1 className=\"loader__title\">Reading</h1>\n\t\t</div>\n\t)\n}\n","import React, { lazy, Suspense } from 'react'\nimport { connect } from 'react-redux'\nimport InitLoader from '../InitLoader'\n\nconst AppDesktop = lazy(() => import('../../../desktop/components/Routes'))\nconst AppMobile = lazy(() => import('../../../mobile/components/Routes'))\n\nconst AppSelector = ({ isDesktop }) => {\n\treturn <Suspense fallback={<InitLoader />}>{isDesktop ? <AppDesktop /> : <AppMobile />}</Suspense>\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisDesktop: state.appType.isDesktop,\n\t}\n}\n\nexport default connect(mapStateToProps)(AppSelector)\n","import AppSelector from './AppSelector'\n\nexport default AppSelector\n","import React, {useEffect, useState} from 'react'\nimport { connect } from 'react-redux'\nimport { appInitStart } from '../../../infrastructure/redux/actions/appInit/actions'\nimport AppSelector from '../AppSelector'\nimport InitLoader from '../InitLoader'\n\nfunction App({ isInit, error, appInitStart }) {\n\tconst [isReady, setIsReady] = useState(false)\n\n\tuseEffect(() => {\n\t\tappInitStart()\n\t}, [appInitStart])\n\n\tuseEffect(() => {\n\t\tif (isInit) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetIsReady(true)\n\t\t\t}, 1500)\n\t\t}\n\t}, [isInit])\n\n\tif (!isReady) return <InitLoader />\n\n\tif (error) return <div>Error</div>\n\n\treturn <AppSelector />\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisInit: state.appInit.isInit,\n\t\terror: state.appInit.error,\n\t}\n}\n\nconst mapDispatchToProps = { appInitStart }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import App from './App'\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Provider } from 'react-redux'\nimport store from './infrastructure/redux/store'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport App from \"./common/components/App\";\n\nconst app = (\n  <Provider store={ store }>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n// serviceWorkerRegistration.register()","export const GET_BOOKS_REQUEST = 'GET_BOOKS_REQUEST'\nexport const GET_BOOKS_SUCCESS = 'GET_BOOKS_SUCCESS'\nexport const GET_BOOKS_FAILURE = 'GET_BOOKS_FAILURE'\nexport const ADD_BOOK = 'ADD_BOOK'\nexport const REMOVE_BOOK = 'REMOVE_BOOK'","import { GET_BOOKS_REQUEST, GET_BOOKS_SUCCESS, GET_BOOKS_FAILURE, ADD_BOOK, REMOVE_BOOK } from \"./actionTypes\"\n\nexport const getBooksRequest = (payload) => {\n  return {\n    type: GET_BOOKS_REQUEST,\n    payload\n  }\n}\n\nexport const getBooksSuccess = (payload) => {\n  return {\n    type: GET_BOOKS_SUCCESS,\n    payload\n  }\n}\n\nexport const getBooksFailure = (payload) => {\n  return {\n    type: GET_BOOKS_FAILURE,\n    payload\n  }\n}\n\n\nexport const addBook = (book) => {\n  return {\n    type: ADD_BOOK,\n    payload: book\n  }\n}\n\nexport const removeBook = (book) => {\n  return {\n    type: REMOVE_BOOK,\n    payload: book\n  }\n}"],"sourceRoot":""}