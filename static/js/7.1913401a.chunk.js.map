{"version":3,"sources":["infrastructure/utils/toastNotifications.js","assets/images/Feedback.gif","mobile/pages/Contacts/Contacts.module.css","common/components/LoaderWithBackground/LoaderWithBackground.module.css","common/components/Loader/index.js","common/components/Loader/Loader.js","common/components/LoaderWithBackground/index.js","common/components/LoaderWithBackground/LoaderWithBackground.js","mobile/pages/Contacts/Contacts.js","mobile/pages/Contacts/index.js"],"names":["successNotify","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","progress","undefined","failureNotify","error","module","exports","Loader","className","style","display","justifyContent","alignSelf","LoaderWithBackground","loading","styles","Background","Contacts","useState","from_name","to_name","message","reply_to","toSend","setToSend","isEmptyError","setIsEmptyError","isLoading","setIsLoading","handleChange","e","target","name","value","cursor","src","feedback","alt","Feedback__image","onSubmit","preventDefault","Object","values","some","x","send","then","response","status","Notification","permission","options","body","vibrate","data","dateOfArrival","Date","now","primaryKey","displayNotification","window","scrollTo","catch","htmlFor","id","type","placeholder","onChange","disabled"],"mappings":"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","file":"static/js/7.1913401a.chunk.js","sourcesContent":["import {toast} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const successNotify = () => toast.success(\"The message has been successfully sent!\", {position: \"top-right\",\n\tautoClose: 3000,\n\thideProgressBar: false,\n\tcloseOnClick: true,\n\tpauseOnHover: true,\n\tdraggable: true,\n\ttheme: 'colored',\n\tprogress: undefined,\n});\n\nexport const failureNotify = () => toast.error(\"Something went wrong! Try again, please.\", {\n\tposition: \"top-right\",\n\tautoClose: 3000,\n\thideProgressBar: false,\n\tcloseOnClick: true,\n\tpauseOnHover: true,\n\tdraggable: true,\n\ttheme: 'colored',\n\tprogress: undefined,\n});","export default __webpack_public_path__ + \"static/media/Feedback.8e07ee44.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"will-change\":\"Contacts_will-change__2AO1n\",\"cursor\":\"Contacts_cursor__fHI26\",\"Feedback__image\":\"Contacts_Feedback__image__1JYoA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"LoaderWithBackground_Background__Cr6Lk\"};","import Loader from './Loader'\n\nexport default Loader\n","import React from 'react'\nimport './Loader.css'\n\nconst Loader = ({ position = 'absolute' }) => (\n\t<div className={'loader'} style={{ position }} data-testid='loader'>\n\t\t<div style={{ display: 'flex', justifyContent: 'center', alignSelf: 'center' }} className={`lds-ring`}>\n\t\t\t<div />\n\t\t\t<div />\n\t\t\t<div />\n\t\t\t<div />\n\t\t</div>\n\t</div>\n)\n\nexport default Loader\n","import LoaderWithBackground from './LoaderWithBackground'\n\nexport default LoaderWithBackground\n","import Loader from '../Loader'\nimport styles from './LoaderWithBackground.module.css'\nimport React from 'react'\n\nconst LoaderWithBackground = ({ loading, position = 'absolute' }) => {\n\tif (loading) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Loader position={position} />\n\t\t\t\t<div className={styles.Background} />\n\t\t\t</>\n\t\t)\n\t}\n\treturn null\n}\n\nexport default LoaderWithBackground\n","import React, {useState} from 'react'\nimport styles from './Contacts.module.css'\nimport feedback from '../../../assets/images/Feedback.gif'\nimport { send } from 'emailjs-com'\nimport {failureNotify, successNotify} from \"../../../infrastructure/utils/toastNotifications\";\nimport LoaderWithBackground from \"../../../common/components/LoaderWithBackground\";\n\nconst Contacts = () => {\n    const [toSend, setToSend] = useState({\n        from_name: '',\n        to_name: 'Books Review',\n        message: '',\n        reply_to: '',\n    })\n\n    const [isEmptyError, setIsEmptyError] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n\n    const handleChange = (e) => {\n        setToSend({ ...toSend, [e.target.name]: e.target.value })\n    };\n\n    function displayNotification() {\n      if (Notification.permission === 'granted') {\n        // navigator.serviceWorker.getRegistration().then(function(reg) {\n        const options = {\n          body: 'Your message has been delivered successfully! Thank you for your contribution!',\n          vibrate: [100, 50, 100],\n          data: {\n            dateOfArrival: Date.now(),\n            primaryKey: 1\n          }\n        };\n        new Notification('Delivered!', options);\n        // });\n      }\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const isEmpty = Object.values(toSend).some(x => x === '');\n        if (isEmpty) {\n            setIsEmptyError(true)\n            return\n        }\n        setIsEmptyError(false)\n        setIsLoading(true)\n\n      send(\n          'service_0c0t89b',\n          'template_f1fo9tg',\n          toSend,\n          'user_fzMcAS4TUL53ER9r0bZex'\n        )\n          .then((response) => {\n              if (response.status === 200) {\n                  successNotify()\n                  displayNotification()\n                  window.scrollTo(0, 0)\n                  setIsLoading(false)\n                  setToSend({\n                      from_name: '',\n                      to_name: '',\n                      message: '',\n                      reply_to: '',\n                  })\n              } else {\n                  failureNotify()\n              }\n          })\n          .catch(() => {\n              failureNotify()\n          })\n    }\n\n    return (\n      <div className=\"m-5\">\n        <div className=\"mb-16 group\">\n            <span className=\"relative\">\n              <span className=\"h-20 pt-2 text-4xl overflow-x-hidden whitespace-wrap text-brand-accent text-blue-700\">\n                We care what you think!\n              </span>\n               <span className={`${styles.cursor} absolute right-16 bottom-0 inline-block h-10 bg-white w-full animate-type will-change`} />\n            </span>\n          <p className=\"text-2xl text-gray-500 mt-2 animate-appear opacity-0\">Give us feedback, so that we know what we should improve to deliver a better experience.</p>\n          <img src={feedback} alt='feedback' className={styles.Feedback__image}/>\n        </div>\n\n        <form className=\"w-full max-w-lg relative\" onSubmit={onSubmit}>\n          <LoaderWithBackground loading={isLoading} />\n          <div className=\"flex flex-wrap -mx-3 mb-6\">\n              <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                  <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n                         htmlFor=\"from-name\">\n                      From\n                  </label>\n                  <input\n                    className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                    id=\"from-name\"\n                    type='text'\n                    name='from_name'\n                    placeholder='Name'\n                    value={toSend.from_name}\n                    onChange={handleChange}/>\n              </div>\n              <div className=\"w-full md:w-1/2 px-3\">\n                  <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n                         htmlFor=\"to-name\">\n                      To\n                  </label>\n                  <input\n                    className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                    id=\"to-last-name\"\n                    type='text'\n                    name='to_name'\n                    placeholder='Name'\n                    value={toSend.to_name}\n                    disabled={true}\n                    onChange={handleChange}/>\n              </div>\n          </div>\n          <div className=\"flex flex-wrap -mx-3 mb-6\">\n              <div className=\"w-full px-3\">\n                  <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n                         htmlFor=\"email\">\n                      E-mail\n                  </label>\n                  <input\n                    className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                    id=\"email\"\n                    type=\"email\"\n                    name='reply_to'\n                    placeholder='Your email'\n                    value={toSend.reply_to}\n                    onChange={handleChange}\n                  />\n              </div>\n          </div>\n          <div className=\"flex flex-wrap -mx-3 mb-3\">\n              <div className=\"w-full px-3\">\n                  <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n                         htmlFor=\"password\">\n                      Message\n                  </label>\n                  <textarea\n                      className=\" no-resize appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500 h-48 resize-none\"\n                      id=\"message\"\n                      name='message'\n                      placeholder='Your message'\n                      value={toSend.message}\n                      onChange={handleChange}\n                  />\n              </div>\n          </div>\n          <div className=\"md:flex gap-y-2 flex-col md:items-center justify-center\">\n              {isEmptyError && <span className=\"text-red-600\">Please make sure all fields are filled.</span>}\n              <div>\n                  <button\n                    className=\"shadow  bg-black hover:bg-opacity-80 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n                    type=\"submit\">\n                      Send\n                  </button>\n              </div>\n              <div className=\"md:w-2/3\"/>\n          </div>\n        </form>\n      </div>\n    )\n}\n\nexport default Contacts","import Contacts from './Contacts.js'\n\nexport default Contacts"],"sourceRoot":""}